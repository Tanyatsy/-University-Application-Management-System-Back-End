// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Unipply.Context;

namespace Unipply.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20220522071018_AddFavouritesSpecialtyToUserProfile")]
    partial class AddFavouritesSpecialtyToUserProfile
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("FacultyDataUserProfileData", b =>
                {
                    b.Property<Guid>("FavouritesFacultiesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserProfileDatasId")
                        .HasColumnType("uuid");

                    b.HasKey("FavouritesFacultiesId", "UserProfileDatasId");

                    b.HasIndex("UserProfileDatasId");

                    b.ToTable("FacultyDataUserProfileData");
                });

            modelBuilder.Entity("SpecialtyDataUserProfileData", b =>
                {
                    b.Property<Guid>("FavouritesSpecialtiesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserProfileDatasId")
                        .HasColumnType("uuid");

                    b.HasKey("FavouritesSpecialtiesId", "UserProfileDatasId");

                    b.HasIndex("UserProfileDatasId");

                    b.ToTable("SpecialtyDataUserProfileData");
                });

            modelBuilder.Entity("Unipply.Models.Faculty.FacultyData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Info")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FacultyData");
                });

            modelBuilder.Entity("Unipply.Models.Specialty.SpecialtyData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("FacultyId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("SpecialtyData");
                });

            modelBuilder.Entity("Unipply.Models.User.UserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserData");
                });

            modelBuilder.Entity("Unipply.Models.User.UserProfileData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserDataId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserDataId");

                    b.ToTable("UserProfileData");
                });

            modelBuilder.Entity("FacultyDataUserProfileData", b =>
                {
                    b.HasOne("Unipply.Models.Faculty.FacultyData", null)
                        .WithMany()
                        .HasForeignKey("FavouritesFacultiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Unipply.Models.User.UserProfileData", null)
                        .WithMany()
                        .HasForeignKey("UserProfileDatasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpecialtyDataUserProfileData", b =>
                {
                    b.HasOne("Unipply.Models.Specialty.SpecialtyData", null)
                        .WithMany()
                        .HasForeignKey("FavouritesSpecialtiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Unipply.Models.User.UserProfileData", null)
                        .WithMany()
                        .HasForeignKey("UserProfileDatasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Unipply.Models.Specialty.SpecialtyData", b =>
                {
                    b.HasOne("Unipply.Models.Faculty.FacultyData", "Faculty")
                        .WithMany("Specialties")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Unipply.Models.User.UserProfileData", b =>
                {
                    b.HasOne("Unipply.Models.User.UserData", "UserData")
                        .WithMany()
                        .HasForeignKey("UserDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserData");
                });

            modelBuilder.Entity("Unipply.Models.Faculty.FacultyData", b =>
                {
                    b.Navigation("Specialties");
                });
#pragma warning restore 612, 618
        }
    }
}
